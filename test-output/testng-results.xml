<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="19" total="40" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="49118" started-at="2019-12-09T18:57:32 IST" finished-at="2019-12-09T18:58:21 IST">
    <groups>
      <group name="OpenWebSite-test">
        <method signature="MainRunner.upFooterOpenWebSite()[pri:1, instance:tests.MainRunner@2758fe70]" name="upFooterOpenWebSite" class="tests.MainRunner"/>
        <method signature="MainRunner.upFooterOpenWebSite()[pri:1, instance:tests.MainRunner@71bbf57e]" name="upFooterOpenWebSite" class="tests.MainRunner"/>
      </group> <!-- OpenWebSite-test -->
      <group name="UpFooter-test">
        <method signature="MainRunner.compareTextAtDropDownMenu()[pri:5, instance:tests.MainRunner@2758fe70]" name="compareTextAtDropDownMenu" class="tests.MainRunner"/>
        <method signature="MainRunner.compareTextColorAtDropDownMenu()[pri:6, instance:tests.MainRunner@2758fe70]" name="compareTextColorAtDropDownMenu" class="tests.MainRunner"/>
        <method signature="MainRunner.testAccessabilityMenu()[pri:8, instance:tests.MainRunner@2758fe70]" name="testAccessabilityMenu" class="tests.MainRunner"/>
        <method signature="MainRunner.testLoginPagesforPrivateAndBusiness()[pri:7, instance:tests.MainRunner@2758fe70]" name="testLoginPagesforPrivateAndBusiness" class="tests.MainRunner"/>
        <method signature="MainRunner.upFooterClickOnB144Link()[pri:4, instance:tests.MainRunner@2758fe70]" name="upFooterClickOnB144Link" class="tests.MainRunner"/>
        <method signature="MainRunner.upFooterHamburgerButton()[pri:3, instance:tests.MainRunner@2758fe70]" name="upFooterHamburgerButton" class="tests.MainRunner"/>
        <method signature="MainRunner.upFooterXButton()[pri:2, instance:tests.MainRunner@2758fe70]" name="upFooterXButton" class="tests.MainRunner"/>
      </group> <!-- UpFooter-test -->
      <group name="Business at the area - business card">
        <method signature="MainRunner.countCardsAtMapPage()[pri:14, instance:tests.MainRunner@71bbf57e]" name="countCardsAtMapPage" class="tests.MainRunner"/>
        <method signature="MainRunner.testClickOnNumberLeadToBusinessPage()[pri:18, instance:tests.MainRunner@71bbf57e]" name="testClickOnNumberLeadToBusinessPage" class="tests.MainRunner"/>
        <method signature="MainRunner.testColorOfNumberAtTicketThatNotTheSameAsBackground()[pri:17, instance:tests.MainRunner@71bbf57e]" name="testColorOfNumberAtTicketThatNotTheSameAsBackground" class="tests.MainRunner"/>
        <method signature="MainRunner.testColorOfTicketNumber()[pri:16, instance:tests.MainRunner@71bbf57e]" name="testColorOfTicketNumber" class="tests.MainRunner"/>
        <method signature="MainRunner.testThatCardsHaveNumbers()[pri:15, instance:tests.MainRunner@71bbf57e]" name="testThatCardsHaveNumbers" class="tests.MainRunner"/>
        <method signature="MainRunner.testThatEachCardHasTitle()[pri:19, instance:tests.MainRunner@71bbf57e]" name="testThatEachCardHasTitle" class="tests.MainRunner"/>
        <method signature="MainRunner.testThatEachCardTitleIsWhite()[pri:20, instance:tests.MainRunner@71bbf57e]" name="testThatEachCardTitleIsWhite" class="tests.MainRunner"/>
      </group> <!-- Business at the area - business card -->
      <group name="Business at the area - business tab">
        <method signature="MainRunner.testBusinssTabColorWhenUnselected()[pri:12, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabColorWhenUnselected" class="tests.MainRunner"/>
        <method signature="MainRunner.testBusinssTabIcon()[pri:10, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabIcon" class="tests.MainRunner"/>
        <method signature="MainRunner.testBusinssTabIsDefaultSelected()[pri:9, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabIsDefaultSelected" class="tests.MainRunner"/>
        <method signature="MainRunner.testBusinssTabTextColor()[pri:11, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabTextColor" class="tests.MainRunner"/>
        <method signature="MainRunner.testMapsHeaderTextTopRight()[pri:13, instance:tests.MainRunner@71bbf57e]" name="testMapsHeaderTextTopRight" class="tests.MainRunner"/>
      </group> <!-- Business at the area - business tab -->
    </groups>
    <test name="Up Footer" duration-ms="27853" started-at="2019-12-09T18:57:32 IST" finished-at="2019-12-09T18:58:00 IST">
      <class name="tests.MainRunner">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.MainRunner@2758fe70]" name="setup" is-config="true" duration-ms="10580" started-at="2019-12-09T18:57:32 IST" finished-at="2019-12-09T18:57:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="upFooterOpenWebSite()[pri:1, instance:tests.MainRunner@2758fe70]" name="upFooterOpenWebSite" duration-ms="543" started-at="2019-12-09T18:57:43 IST" description="Open the web site test" finished-at="2019-12-09T18:57:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upFooterOpenWebSite -->
        <test-method status="PASS" signature="upFooterXButton()[pri:2, instance:tests.MainRunner@2758fe70]" name="upFooterXButton" duration-ms="5761" started-at="2019-12-09T18:57:43 IST" description="Test if Hamburger menu have the X option" finished-at="2019-12-09T18:57:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upFooterXButton -->
        <test-method status="PASS" signature="upFooterHamburgerButton()[pri:3, instance:tests.MainRunner@2758fe70]" name="upFooterHamburgerButton" duration-ms="116" started-at="2019-12-09T18:57:49 IST" description="Test that the Hamburger menu can be closed" finished-at="2019-12-09T18:57:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upFooterHamburgerButton -->
        <test-method status="PASS" signature="upFooterClickOnB144Link()[pri:4, instance:tests.MainRunner@2758fe70]" name="upFooterClickOnB144Link" duration-ms="452" started-at="2019-12-09T18:57:49 IST" description="Test that the user land at the main 144 page" finished-at="2019-12-09T18:57:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upFooterClickOnB144Link -->
        <test-method status="PASS" signature="compareTextAtDropDownMenu()[pri:5, instance:tests.MainRunner@2758fe70]" name="compareTextAtDropDownMenu" duration-ms="3397" started-at="2019-12-09T18:57:50 IST" description="Test that the text at Drop down menu is correct" finished-at="2019-12-09T18:57:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareTextAtDropDownMenu -->
        <test-method status="FAIL" signature="compareTextColorAtDropDownMenu()[pri:6, instance:tests.MainRunner@2758fe70]" name="compareTextColorAtDropDownMenu" duration-ms="335" started-at="2019-12-09T18:57:53 IST" description="Test that the text color at Drop down menu is correct" finished-at="2019-12-09T18:57:53 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The second line at the DropDown menu is not Blue expected [#0279cd] but found [#333333]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The second line at the DropDown menu is not Blue expected [#0279cd] but found [#333333]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at pages.B144MainPage.testColorOfButtons(B144MainPage.java:69)
at tests.MainRunner.compareTextColorAtDropDownMenu(MainRunner.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareTextColorAtDropDownMenu -->
        <test-method status="PASS" signature="testLoginPagesforPrivateAndBusiness()[pri:7, instance:tests.MainRunner@2758fe70]" name="testLoginPagesforPrivateAndBusiness" duration-ms="2614" started-at="2019-12-09T18:57:54 IST" description="Test login proccess of private and business user" finished-at="2019-12-09T18:57:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPagesforPrivateAndBusiness -->
        <test-method status="PASS" signature="testAccessabilityMenu()[pri:8, instance:tests.MainRunner@2758fe70]" name="testAccessabilityMenu" duration-ms="2328" started-at="2019-12-09T18:57:57 IST" description="Test the accessability menu" finished-at="2019-12-09T18:57:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccessabilityMenu -->
        <test-method status="PASS" signature="close()[pri:0, instance:tests.MainRunner@2758fe70]" name="close" is-config="true" duration-ms="616" started-at="2019-12-09T18:57:59 IST" finished-at="2019-12-09T18:58:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- tests.MainRunner -->
    </test> <!-- Up Footer -->
    <test name="Business at the area" duration-ms="20986" started-at="2019-12-09T18:58:00 IST" finished-at="2019-12-09T18:58:21 IST">
      <class name="tests.MainRunner">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.MainRunner@71bbf57e]" name="setup" is-config="true" duration-ms="9199" started-at="2019-12-09T18:58:00 IST" finished-at="2019-12-09T18:58:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="upFooterOpenWebSite()[pri:1, instance:tests.MainRunner@71bbf57e]" name="upFooterOpenWebSite" duration-ms="389" started-at="2019-12-09T18:58:09 IST" description="Open the web site test" finished-at="2019-12-09T18:58:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upFooterOpenWebSite -->
        <test-method status="PASS" signature="testBusinssTabIsDefaultSelected()[pri:9, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabIsDefaultSelected" duration-ms="4706" started-at="2019-12-09T18:58:10 IST" description="Test that business tab is default choosen" finished-at="2019-12-09T18:58:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBusinssTabIsDefaultSelected -->
        <test-method status="PASS" signature="testBusinssTabIcon()[pri:10, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabIcon" duration-ms="35" started-at="2019-12-09T18:58:14 IST" description="Test that each card have an eye icon on it" finished-at="2019-12-09T18:58:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBusinssTabIcon -->
        <test-method status="PASS" signature="testBusinssTabTextColor()[pri:11, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabTextColor" duration-ms="19" started-at="2019-12-09T18:58:14 IST" description="Test that the text at the card is white" finished-at="2019-12-09T18:58:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBusinssTabTextColor -->
        <test-method status="PASS" signature="testBusinssTabColorWhenUnselected()[pri:12, instance:tests.MainRunner@71bbf57e]" name="testBusinssTabColorWhenUnselected" duration-ms="93" started-at="2019-12-09T18:58:14 IST" description="Test that unselected tab is white colored" finished-at="2019-12-09T18:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBusinssTabColorWhenUnselected -->
        <test-method status="PASS" signature="testMapsHeaderTextTopRight()[pri:13, instance:tests.MainRunner@71bbf57e]" name="testMapsHeaderTextTopRight" duration-ms="58" started-at="2019-12-09T18:58:15 IST" description="Test that the header at the page is the same as the card" finished-at="2019-12-09T18:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapsHeaderTextTopRight -->
        <test-method status="PASS" signature="countCardsAtMapPage()[pri:14, instance:tests.MainRunner@71bbf57e]" name="countCardsAtMapPage" duration-ms="116" started-at="2019-12-09T18:58:15 IST" description="Test the number of cards at the page" finished-at="2019-12-09T18:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- countCardsAtMapPage -->
        <test-method status="PASS" signature="testThatCardsHaveNumbers()[pri:15, instance:tests.MainRunner@71bbf57e]" name="testThatCardsHaveNumbers" duration-ms="282" started-at="2019-12-09T18:58:15 IST" description="Test that cards have number" finished-at="2019-12-09T18:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThatCardsHaveNumbers -->
        <test-method status="PASS" signature="testColorOfTicketNumber()[pri:16, instance:tests.MainRunner@71bbf57e]" name="testColorOfTicketNumber" duration-ms="22" started-at="2019-12-09T18:58:15 IST" description="Test that the color of the ticket number is white" finished-at="2019-12-09T18:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColorOfTicketNumber -->
        <test-method status="PASS" signature="testColorOfNumberAtTicketThatNotTheSameAsBackground()[pri:17, instance:tests.MainRunner@71bbf57e]" name="testColorOfNumberAtTicketThatNotTheSameAsBackground" duration-ms="21" started-at="2019-12-09T18:58:15 IST" description="Test that the background color of number at the ticket is not the same as other backgound" finished-at="2019-12-09T18:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColorOfNumberAtTicketThatNotTheSameAsBackground -->
        <test-method status="PASS" signature="testClickOnNumberLeadToBusinessPage()[pri:18, instance:tests.MainRunner@71bbf57e]" name="testClickOnNumberLeadToBusinessPage" duration-ms="3926" started-at="2019-12-09T18:58:15 IST" description="Test that choosing number on card lead to business page" finished-at="2019-12-09T18:58:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickOnNumberLeadToBusinessPage -->
        <test-method status="PASS" signature="testThatEachCardHasTitle()[pri:19, instance:tests.MainRunner@71bbf57e]" name="testThatEachCardHasTitle" duration-ms="1345" started-at="2019-12-09T18:58:19 IST" description="Test that each card has title" finished-at="2019-12-09T18:58:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThatEachCardHasTitle -->
        <test-method status="PASS" signature="testThatEachCardTitleIsWhite()[pri:20, instance:tests.MainRunner@71bbf57e]" name="testThatEachCardTitleIsWhite" duration-ms="146" started-at="2019-12-09T18:58:20 IST" description="Test that each card text is white colored" finished-at="2019-12-09T18:58:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThatEachCardTitleIsWhite -->
        <test-method status="PASS" signature="close()[pri:0, instance:tests.MainRunner@71bbf57e]" name="close" is-config="true" duration-ms="611" started-at="2019-12-09T18:58:20 IST" finished-at="2019-12-09T18:58:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- tests.MainRunner -->
    </test> <!-- Business at the area -->
  </suite> <!-- Suite -->
</testng-results>
